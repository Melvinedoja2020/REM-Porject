# Generated by Django 5.0.13 on 2025-09-30 13:18

import auto_prefetch
import core.applications.users.managers
import core.helper.media
import core.helper.models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('subscriptions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('role', models.CharField(blank=True, choices=[('Prospective Buyer/Tenant', 'Prospective Buyer/Tenant'), ('Agent', 'Agent')], max_length=50, null=True, verbose_name='Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', core.applications.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=core.helper.media.MediaHelper.get_image_upload_path)),
                ('agent_type', models.CharField(choices=[('Real Estate Agent', 'Real Estate Agent'), ('Property Manager', 'Property Manager')], max_length=50)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('office_location', models.CharField(blank=True, max_length=255, null=True)),
                ('office_phone_no', models.CharField(blank=True, max_length=15, null=True)),
                ('office_address', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True)),
                ('license_document', models.FileField(blank=True, null=True, upload_to=core.helper.media.MediaHelper.get_image_upload_path)),
                ('company_registration_document', models.FileField(blank=True, null=True, upload_to=core.helper.media.MediaHelper.get_image_upload_path)),
                ('company_registration_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verified', models.BooleanField(default=False)),
                ('current_subscription', auto_prefetch.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_for_agent', to='subscriptions.agentsubscription')),
                ('user', auto_prefetch.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Profile',
                'verbose_name_plural': 'Agent Profiles',
                'ordering': ['-id'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaLinks',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('facebook', models.URLField(blank=True, max_length=255, null=True)),
                ('twitter', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedin', models.URLField(blank=True, max_length=255, null=True)),
                ('instagram', models.URLField(blank=True, max_length=255, null=True)),
                ('user', auto_prefetch.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_media_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social Media Links',
                'verbose_name_plural': 'Social Media Links',
                'ordering': ['-id'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=core.helper.media.MediaHelper.get_image_upload_path)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('preferred_location', models.CharField(blank=True, max_length=255, null=True)),
                ('preferred_property_type', models.CharField(blank=True, max_length=255, null=True)),
                ('min_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_features', models.JSONField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('user', auto_prefetch.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'ordering': ['-id'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
