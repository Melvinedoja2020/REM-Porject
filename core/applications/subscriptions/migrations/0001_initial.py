# Generated by Django 5.0.13 on 2025-09-30 13:18

import core.helper.models
import django.db.models.manager
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgentCommission',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Commission percentage', max_digits=5, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('paid_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Agent Commission',
                'verbose_name_plural': 'Agent Commissions',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AgentSubscription',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('plan', models.CharField(choices=[('Basic', 'Basic'), ('Premium', 'Premium'), ('Enterprise', 'Enterprise')], default='Basic', max_length=20)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_trial', models.BooleanField(default=False)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('auto_renew', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Agent Subscription',
                'verbose_name_plural': 'Agent Subscriptions',
                'ordering': ['-start_date'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedListing',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Featured Listing',
                'verbose_name_plural': 'Featured Listings',
                'ordering': ['-start_date'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(db_index=True, help_text='Unique transaction reference from our system.', max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='NGN', max_length=10)),
                ('payment_method', models.CharField(choices=[('paystack', 'Paystack'), ('flutterwave', 'Flutterwave'), ('moneypoint', 'Moneypoint')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlanConfig',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('plan', models.CharField(choices=[('Basic', 'Basic'), ('Premium', 'Premium'), ('Enterprise', 'Enterprise')], max_length=20, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('duration_days', models.PositiveIntegerField(default=365)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan Configuration',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['price'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RentalTransaction',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.helper.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('completed', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Rental Transaction',
                'verbose_name_plural': 'Rental Transactions',
                'ordering': ['-date'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
